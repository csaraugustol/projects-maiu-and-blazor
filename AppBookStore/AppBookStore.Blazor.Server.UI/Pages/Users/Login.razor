@page "/users/login"
@inject IAuthenticationService authenticationService
@inject NavigationManager navigationManager

<h3>Login</h3>

<div class="card-body">
    <EditForm Model="LoginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="email">E-mail</label>
            <InputText class="form-control" @bind-Value="LoginModel.Email" />
            <ValidationMessage For="@(()=> LoginModel.Email)" />
        </div>
        <div class="form-group mt-3">
            <label for="Password">Senha</label>
            <InputText type="password" class="form-control" @bind-Value="LoginModel.Password" />
            <ValidationMessage For="@(()=> LoginModel.Password)" />
        </div>

        <button type="submit" class="btn btn-primary mt-3">Logar</button>
    </EditForm>
</div>

@code {
    LoginUserDto LoginModel = new LoginUserDto();
    string message = string.Empty;

    public async Task HandleLogin()
    {
        try
        {
            var response = await authenticationService.AuthenticateAsync(LoginModel);

            if(response)
            {
                navigationManager.NavigateTo("/");
            }

            message = "Dadps inválidos! Por favor, tente novamente.";

        }
        catch (ApiException ex)
        {
            if (ex.StatusCode >= 200 && ex.StatusCode <= 299)
            {
            }
            message = ex.Response;
        }
    }
}
