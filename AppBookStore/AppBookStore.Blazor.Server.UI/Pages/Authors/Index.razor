@page "/authors/"
@inject IAuthorService authorService

<h3>Autores</h3>

@if(response.Success == false)
{
    <div class="alert alert-danger">
        <p>@response.Message</p>
    </div>
}

@if (Authors == null)
{
    
}
else
{
    <a href="/authors/create" class="btn btn-secondary"><span class="oi oi-plus" aria-hidden="true"></span> Novo</a>
    <br />
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Sobrenome</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var author in Authors)
            {
                <tr>
                    <td>@author.FirstName</td>
                    <td>@author.LastName</td>
                    <td>
                        <a href="/authors/details/@author.Id" class="btn btn-primary"><span class="oi oi-info" aria-hidden="true"></span></a>
                        <a href="/authors/edit/@author.Id" class="btn btn-warning"><span class="oi oi-pencil" aria-hidden="true"></span></a>
                        <a href="/authors/delete/@author.Id" class="btn btn-danger"><span class="oi oi-trash" aria-hidden="true"></span></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<AuthorReadOnlyDto> Authors;
    private Response<List<AuthorReadOnlyDto>> response = new Response<List<AuthorReadOnlyDto>>{Success = true};

    protected override async Task OnInitializedAsync()
    {
        response = await authorService.GetAuthors();

        if(response.Success)
        {
            Authors = response.Data;
        }
    }
}
